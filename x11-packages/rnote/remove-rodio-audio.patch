diff -uNr rnote-0.12.0/Cargo.toml rnote-0.12.0.mod/Cargo.toml
--- rnote-0.12.0/Cargo.toml	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/Cargo.toml	2025-04-12 21:22:29.191326377 +0800
@@ -62,9 +62,9 @@
 rand_pcg = "0.9.0"
 rayon = "1.10"
 regex = "1.10"
-rodio = { version = "0.20.1", default-features = false, features = [
-    "symphonia-wav",
-] }
+#rodio = { version = "0.20.1", default-features = false, features = [
+#    "symphonia-wav",
+#] }
 rough_piet = "0.9.0"
 roughr = "0.9.0"
 roxmltree = "0.20.0"
diff -uNr rnote-0.12.0/build-aux/com.github.flxzt.rnote.Devel.json rnote-0.12.0.mod/build-aux/com.github.flxzt.rnote.Devel.json
--- rnote-0.12.0/build-aux/com.github.flxzt.rnote.Devel.json	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/build-aux/com.github.flxzt.rnote.Devel.json	2025-04-12 21:40:24.375325967 +0800
@@ -16,7 +16,6 @@
     "--socket=fallback-x11",
     "--device=dri",
     "--share=ipc",
-    "--socket=pulseaudio",
     "--filesystem=xdg-documents",
     "--filesystem=xdg-pictures",
     "--filesystem=xdg-desktop",
diff -uNr rnote-0.12.0/crates/rnote-engine/Cargo.toml rnote-0.12.0.mod/crates/rnote-engine/Cargo.toml
--- rnote-0.12.0/crates/rnote-engine/Cargo.toml	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/Cargo.toml	2025-04-12 21:23:08.339326362 +0800
@@ -40,7 +40,7 @@
 rand_pcg = { workspace = true }
 rayon = { workspace = true }
 regex = { workspace = true }
-rodio = { workspace = true }
+#rodio = { workspace = true }
 rough_piet = { workspace = true }
 roughr = { workspace = true }
 roxmltree = { workspace = true }
diff -uNr rnote-0.12.0/crates/rnote-engine/data/meson.build rnote-0.12.0.mod/crates/rnote-engine/data/meson.build
--- rnote-0.12.0/crates/rnote-engine/data/meson.build	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/data/meson.build	2025-04-12 21:40:07.539325973 +0800
@@ -1,59 +1,10 @@
 # sounds
 sounds_files = files(
-    'sounds/brush/brush.wav',
-    'sounds/marker/marker_00.wav',
-    'sounds/marker/marker_01.wav',
-    'sounds/marker/marker_02.wav',
-    'sounds/marker/marker_03.wav',
-    'sounds/marker/marker_04.wav',
-    'sounds/marker/marker_05.wav',
-    'sounds/marker/marker_06.wav',
-    'sounds/marker/marker_07.wav',
-    'sounds/marker/marker_08.wav',
-    'sounds/marker/marker_09.wav',
-    'sounds/marker/marker_10.wav',
-    'sounds/marker/marker_11.wav',
-    'sounds/marker/marker_12.wav',
-    'sounds/marker/marker_13.wav',
-    'sounds/marker/marker_14.wav',
-    'sounds/typewriter/typewriter_00.wav',
-    'sounds/typewriter/typewriter_01.wav',
-    'sounds/typewriter/typewriter_02.wav',
-    'sounds/typewriter/typewriter_03.wav',
-    'sounds/typewriter/typewriter_04.wav',
-    'sounds/typewriter/typewriter_05.wav',
-    'sounds/typewriter/typewriter_06.wav',
-    'sounds/typewriter/typewriter_07.wav',
-    'sounds/typewriter/typewriter_08.wav',
-    'sounds/typewriter/typewriter_09.wav',
-    'sounds/typewriter/typewriter_10.wav',
-    'sounds/typewriter/typewriter_11.wav',
-    'sounds/typewriter/typewriter_12.wav',
-    'sounds/typewriter/typewriter_13.wav',
-    'sounds/typewriter/typewriter_14.wav',
-    'sounds/typewriter/typewriter_15.wav',
-    'sounds/typewriter/typewriter_16.wav',
-    'sounds/typewriter/typewriter_17.wav',
-    'sounds/typewriter/typewriter_18.wav',
-    'sounds/typewriter/typewriter_19.wav',
-    'sounds/typewriter/typewriter_20.wav',
-    'sounds/typewriter/typewriter_21.wav',
-    'sounds/typewriter/typewriter_22.wav',
-    'sounds/typewriter/typewriter_23.wav',
-    'sounds/typewriter/typewriter_24.wav',
-    'sounds/typewriter/typewriter_25.wav',
-    'sounds/typewriter/typewriter_26.wav',
-    'sounds/typewriter/typewriter_27.wav',
-    'sounds/typewriter/typewriter_28.wav',
-    'sounds/typewriter/typewriter_29.wav',
-    'sounds/typewriter/typewriter_bell.wav',
-    'sounds/typewriter/typewriter_insert.wav',
-    'sounds/typewriter/typewriter_linefeed.wav',
-    'sounds/typewriter/typewriter_thump.wav',
+
 )
 
 # install sounds flat in one directory
-install_data(sounds_files, install_dir: pkgdatadir / 'sounds')
+# install_data(sounds_files, install_dir: pkgdatadir / 'sounds')
 
 
 # fonts
diff -uNr rnote-0.12.0/crates/rnote-engine/src/engine/export.rs rnote-0.12.0.mod/crates/rnote-engine/src/engine/export.rs
--- rnote-0.12.0/crates/rnote-engine/src/engine/export.rs	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/src/engine/export.rs	2025-04-12 21:33:58.387326114 +0800
@@ -353,7 +353,6 @@
             penholder: self.penholder.clone_config(),
             import_prefs: self.import_prefs.clone_config(),
             export_prefs: self.export_prefs.clone_config(),
-            pen_sounds: self.pen_sounds(),
             optimize_epd: self.optimize_epd(),
         }
     }
diff -uNr rnote-0.12.0/crates/rnote-engine/src/engine/import.rs rnote-0.12.0.mod/crates/rnote-engine/src/engine/import.rs
--- rnote-0.12.0/crates/rnote-engine/src/engine/import.rs	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/src/engine/import.rs	2025-04-12 21:33:45.119326119 +0800
@@ -153,7 +153,7 @@
     pub fn load_engine_config(
         &mut self,
         engine_config: EngineConfig,
-        data_dir: Option<PathBuf>,
+        _data_dir: Option<PathBuf>,
     ) -> WidgetFlags {
         let mut widget_flags = WidgetFlags::default();
 
@@ -163,9 +163,6 @@
         self.import_prefs = engine_config.import_prefs;
         self.export_prefs = engine_config.export_prefs;
 
-        // Set the pen sounds to update the audioplayer
-        self.set_pen_sounds(engine_config.pen_sounds, data_dir);
-
         self.set_optimize_epd(engine_config.optimize_epd);
 
         widget_flags |= self
@@ -190,9 +187,6 @@
         self.import_prefs = engine_config.import_prefs;
         self.export_prefs = engine_config.export_prefs;
 
-        // Set the pen sounds to update the audioplayer
-        self.set_pen_sounds(engine_config.pen_sounds, data_dir);
-
         self.set_optimize_epd(engine_config.optimize_epd);
 
         widget_flags |= self
@@ -205,8 +199,6 @@
     }
 
     /// Import and replaces the engine config.
-    ///
-    /// If pen sounds should be enabled the rnote data-dir must be provided.
     pub fn import_engine_config_from_json(
         &mut self,
         serialized_config: &str,
diff -uNr rnote-0.12.0/crates/rnote-engine/src/engine/mod.rs rnote-0.12.0.mod/crates/rnote-engine/src/engine/mod.rs
--- rnote-0.12.0/crates/rnote-engine/src/engine/mod.rs	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/src/engine/mod.rs	2025-04-12 21:29:03.443326227 +0800
@@ -22,7 +22,7 @@
 use crate::store::render_comp::{self, RenderCompState};
 use crate::strokes::content::GeneratedContentImages;
 use crate::strokes::textstroke::{TextAttribute, TextStyle};
-use crate::{AudioPlayer, CloneConfig, SelectionCollision, WidgetFlags, render};
+use crate::{CloneConfig, SelectionCollision, WidgetFlags, render};
 use crate::{Camera, Document, PenHolder, StrokeStore};
 use futures::channel::{mpsc, oneshot};
 use p2d::bounding_volume::{Aabb, BoundingVolume};
@@ -31,7 +31,7 @@
 use rnote_compose::penevent::{PenEvent, ShortcutKey};
 use rnote_compose::{Color, SplitOrder};
 use serde::{Deserialize, Serialize};
-use std::path::PathBuf;
+// use std::path::PathBuf;
 use std::sync::Arc;
 use std::time::Instant;
 use tracing::{debug, error};
@@ -44,7 +44,6 @@
     pub document: &'a Document,
     pub store: &'a StrokeStore,
     pub camera: &'a Camera,
-    pub audioplayer: &'a Option<AudioPlayer>,
     pub animation: &'a Animation,
 }
 
@@ -72,7 +71,6 @@
     pub document: &'a mut Document,
     pub store: &'a mut StrokeStore,
     pub camera: &'a mut Camera,
-    pub audioplayer: &'a mut Option<AudioPlayer>,
     pub animation: &'a mut Animation,
 }
 
@@ -86,7 +84,6 @@
             document: &mut $engine.document,
             store: &mut $engine.store,
             camera: &mut $engine.camera,
-            audioplayer: &mut $engine.audioplayer,
             animation: &mut $engine.animation,
         }
     };
@@ -101,7 +98,6 @@
             document: self.document,
             store: self.store,
             camera: self.camera,
-            audioplayer: self.audioplayer,
             animation: self.animation,
         }
     }
@@ -154,8 +150,6 @@
     import_prefs: ImportPrefs,
     #[serde(rename = "export_prefs")]
     export_prefs: ExportPrefs,
-    #[serde(rename = "pen_sounds")]
-    pen_sounds: bool,
     #[serde(rename = "optimize_epd")]
     optimize_epd: bool,
 }
@@ -235,14 +229,10 @@
     pub import_prefs: ImportPrefs,
     #[serde(rename = "export_prefs")]
     pub export_prefs: ExportPrefs,
-    #[serde(rename = "pen_sounds")]
-    pen_sounds: bool,
     #[serde(rename = "optimize_epd")]
     optimize_epd: bool,
 
     #[serde(skip)]
-    audioplayer: Option<AudioPlayer>,
-    #[serde(skip)]
     pub animation: Animation,
     #[serde(skip)]
     visual_debug: bool,
@@ -277,10 +267,8 @@
             penholder: PenHolder::default(),
             import_prefs: ImportPrefs::default(),
             export_prefs: ExportPrefs::default(),
-            pen_sounds: false,
             optimize_epd: false,
 
-            audioplayer: None,
             animation: Animation::default(),
             visual_debug: false,
             tasks_tx: EngineTaskSender(tasks_tx),
@@ -306,37 +294,6 @@
         self.tasks_rx.take()
     }
 
-    /// Whether pen sounds are enabled.
-    pub fn pen_sounds(&self) -> bool {
-        self.pen_sounds
-    }
-
-    /// Enables/disables the pen sounds.
-    ///
-    /// If pen sound should be enabled, the pkg data dir must be provided.
-    pub fn set_pen_sounds(&mut self, pen_sounds: bool, pkg_data_dir: Option<PathBuf>) {
-        self.pen_sounds = pen_sounds;
-
-        if pen_sounds {
-            if let Some(pkg_data_dir) = pkg_data_dir {
-                // Only create and init a new audioplayer if it does not already exists
-                if self.audioplayer.is_none() {
-                    self.audioplayer = match AudioPlayer::new_init(pkg_data_dir) {
-                        Ok(audioplayer) => Some(audioplayer),
-                        Err(e) => {
-                            error!(
-                                "Creating a new audioplayer failed while enabling pen sounds, Err: {e:?}"
-                            );
-                            None
-                        }
-                    }
-                }
-            }
-        } else {
-            self.audioplayer.take();
-        }
-    }
-
     pub fn optimize_epd(&self) -> bool {
         self.optimize_epd
     }
diff -uNr rnote-0.12.0/crates/rnote-engine/src/lib.rs rnote-0.12.0.mod/crates/rnote-engine/src/lib.rs
--- rnote-0.12.0/crates/rnote-engine/src/lib.rs	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/src/lib.rs	2025-04-12 21:24:19.951326335 +0800
@@ -9,7 +9,7 @@
 //! The main entry point is the [Engine] struct.
 
 // Modules
-pub mod audioplayer;
+// pub mod audioplayer;
 pub mod camera;
 pub mod cloneconfig;
 pub mod document;
@@ -28,7 +28,7 @@
 pub mod widgetflags;
 
 // Re-exports
-pub use audioplayer::AudioPlayer;
+// pub use audioplayer::AudioPlayer;
 pub use camera::Camera;
 pub use cloneconfig::CloneConfig;
 pub use document::Document;
diff -uNr rnote-0.12.0/crates/rnote-engine/src/meson.build rnote-0.12.0.mod/crates/rnote-engine/src/meson.build
--- rnote-0.12.0/crates/rnote-engine/src/meson.build	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/src/meson.build	2025-04-12 21:23:52.211326345 +0800
@@ -1,6 +1,6 @@
 # Specify sources
 rnote_engine_sources = files(
-    'audioplayer.rs',
+#   'audioplayer.rs',
     'camera.rs',
     'cloneconfig.rs',
     'document/background.rs',
diff -uNr rnote-0.12.0/crates/rnote-engine/src/pens/brush.rs rnote-0.12.0.mod/crates/rnote-engine/src/pens/brush.rs
--- rnote-0.12.0/crates/rnote-engine/src/pens/brush.rs	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/src/pens/brush.rs	2025-04-12 21:30:53.167326185 +0800
@@ -74,11 +74,6 @@
                         .bounds()
                         .loosened(Self::INPUT_OVERSHOOT),
                 ) {
-                    if engine_view.pens_config.brush_config.style == BrushStyle::Marker {
-                        play_marker_sound(engine_view);
-                    } else {
-                        trigger_brush_sound(engine_view);
-                    }
 
                     engine_view.pens_config.brush_config.new_style_seeds();
 
@@ -176,17 +171,9 @@
                 let propagate = builder_result.propagate;
 
                 let progress = match builder_result.progress {
-                    BuilderProgress::InProgress => {
-                        if engine_view.pens_config.brush_config.style != BrushStyle::Marker {
-                            trigger_brush_sound(engine_view);
-                        }
-
-                        PenProgress::InProgress
-                    }
+                    BuilderProgress::InProgress => PenProgress::InProgress,
+                }
                     BuilderProgress::EmitContinue(segments) => {
-                        if engine_view.pens_config.brush_config.style != BrushStyle::Marker {
-                            trigger_brush_sound(engine_view);
-                        }
 
                         let n_segments = segments.len();
 
@@ -313,18 +300,6 @@
     const INPUT_OVERSHOOT: f64 = 30.0;
 }
 
-fn play_marker_sound(engine_view: &mut EngineViewMut) {
-    if let Some(audioplayer) = engine_view.audioplayer {
-        audioplayer.play_random_marker_sound();
-    }
-}
-
-fn trigger_brush_sound(engine_view: &mut EngineViewMut) {
-    if let Some(audioplayer) = engine_view.audioplayer.as_mut() {
-        audioplayer.trigger_random_brush_sound();
-    }
-}
-
 fn new_builder(
     builder_type: PenPathBuilderType,
     element: Element,
diff -uNr rnote-0.12.0/crates/rnote-engine/src/pens/typewriter/mod.rs rnote-0.12.0.mod/crates/rnote-engine/src/pens/typewriter/mod.rs
--- rnote-0.12.0/crates/rnote-engine/src/pens/typewriter/mod.rs	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/src/pens/typewriter/mod.rs	2025-04-12 21:31:50.183326163 +0800
@@ -9,13 +9,13 @@
 use crate::store::StrokeKey;
 use crate::strokes::textstroke::{RangedTextAttribute, TextAttribute, TextStyle};
 use crate::strokes::{Stroke, TextStroke};
-use crate::{AudioPlayer, Camera, DrawableOnDoc, WidgetFlags};
+use crate::{Camera, DrawableOnDoc, WidgetFlags};
 use futures::channel::oneshot;
 use p2d::bounding_volume::{Aabb, BoundingVolume};
 use piet::RenderContext;
 use rnote_compose::EventResult;
 use rnote_compose::ext::{AabbExt, Vector2Ext};
-use rnote_compose::penevent::{KeyboardKey, PenEvent, PenProgress, PenState};
+use rnote_compose::penevent::{PenEvent, PenProgress, PenState};
 use rnote_compose::shapes::Shapeable;
 use rnote_compose::style::indicators;
 use rnote_compose::{Transform, color};
@@ -943,8 +943,3 @@
     }
 }
 
-fn play_sound(keyboard_key: Option<KeyboardKey>, audioplayer: &mut Option<AudioPlayer>) {
-    if let Some(audioplayer) = audioplayer {
-        audioplayer.play_typewriter_key_sound(keyboard_key);
-    }
-}
diff -uNr rnote-0.12.0/crates/rnote-engine/src/pens/typewriter/penevents.rs rnote-0.12.0.mod/crates/rnote-engine/src/pens/typewriter/penevents.rs
--- rnote-0.12.0/crates/rnote-engine/src/pens/typewriter/penevents.rs	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-engine/src/pens/typewriter/penevents.rs	2025-04-12 21:32:18.035326152 +0800
@@ -529,7 +529,6 @@
                 progress: PenProgress::Idle,
             },
             TypewriterState::Start(pos) => {
-                super::play_sound(Some(keyboard_key), engine_view.audioplayer);
 
                 match keyboard_key {
                     KeyboardKey::Unicode(keychar) => {
@@ -582,7 +581,6 @@
             } => {
                 match modify_state {
                     ModifyState::Idle => {
-                        super::play_sound(Some(keyboard_key), engine_view.audioplayer);
 
                         if let Some(Stroke::TextStroke(textstroke)) =
                             engine_view.store.get_stroke_mut(*stroke_key)
@@ -864,7 +862,6 @@
                         finished,
                         ..
                     } => {
-                        super::play_sound(Some(keyboard_key), engine_view.audioplayer);
 
                         if let Some(Stroke::TextStroke(textstroke)) =
                             engine_view.store.get_stroke_mut(*stroke_key)
@@ -1110,7 +1107,6 @@
                 progress: PenProgress::Idle,
             },
             TypewriterState::Start(pos) => {
-                super::play_sound(None, engine_view.audioplayer);
 
                 text_style.ranged_text_attributes.clear();
                 text_style.set_max_width(Some(text_width));
@@ -1152,7 +1148,6 @@
             } => {
                 match modify_state {
                     ModifyState::Idle => {
-                        super::play_sound(None, engine_view.audioplayer);
 
                         if let Some(Stroke::TextStroke(textstroke)) =
                             engine_view.store.get_stroke_mut(*stroke_key)
@@ -1194,7 +1189,6 @@
                         finished,
                         ..
                     } => {
-                        super::play_sound(None, engine_view.audioplayer);
 
                         if let Some(Stroke::TextStroke(textstroke)) =
                             engine_view.store.get_stroke_mut(*stroke_key)
diff -uNr rnote-0.12.0/crates/rnote-ui/data/ui/canvasmenu.ui rnote-0.12.0.mod/crates/rnote-ui/data/ui/canvasmenu.ui
--- rnote-0.12.0/crates/rnote-ui/data/ui/canvasmenu.ui	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-ui/data/ui/canvasmenu.ui	2025-04-12 21:34:56.627326092 +0800
@@ -26,11 +26,6 @@
             <attribute name="action">win.snap-positions</attribute>
           </item>
           <item>
-            <attribute name="label" translatable="yes">_Pen Sounds</attribute>
-            <attribute name="toggle" />
-            <attribute name="action">win.pen-sounds</attribute>
-          </item>
-          <item>
             <attribute name="label" translatable="yes">_Return to Origin Page</attribute>
             <attribute name="action">win.return-origin-page</attribute>
           </item>
diff -uNr rnote-0.12.0/crates/rnote-ui/src/appwindow/actions.rs rnote-0.12.0.mod/crates/rnote-ui/src/appwindow/actions.rs
--- rnote-0.12.0/crates/rnote-ui/src/appwindow/actions.rs	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-ui/src/appwindow/actions.rs	2025-04-12 21:35:52.495326071 +0800
@@ -72,9 +72,6 @@
         let action_focus_mode = gio::PropertyAction::new("focus-mode", self, "focus-mode");
         self.add_action(&action_focus_mode);
 
-        let action_pen_sounds =
-            gio::SimpleAction::new_stateful("pen-sounds", None, &false.to_variant());
-        self.add_action(&action_pen_sounds);
         let action_snap_positions =
             gio::SimpleAction::new_stateful("snap-positions", None, &false.to_variant());
         self.add_action(&action_snap_positions);
@@ -349,22 +346,6 @@
             }
         ));
 
-        // Pen sounds
-        action_pen_sounds.connect_change_state(clone!(
-            #[weak(rename_to=appwindow)]
-            self,
-            move |action, state_request| {
-                let pen_sounds = state_request.unwrap().get::<bool>().unwrap();
-                let Some(canvas) = appwindow.active_tab_canvas() else {
-                    return;
-                };
-                canvas
-                    .engine_mut()
-                    .set_pen_sounds(pen_sounds, crate::env::pkg_data_dir().ok());
-                action.set_state(&pen_sounds.to_variant());
-            }
-        ));
-
         // Snap positions
         action_snap_positions.connect_change_state(clone!(
             #[weak(rename_to=appwindow)]
diff -uNr rnote-0.12.0/crates/rnote-ui/src/appwindow/mod.rs rnote-0.12.0.mod/crates/rnote-ui/src/appwindow/mod.rs
--- rnote-0.12.0/crates/rnote-ui/src/appwindow/mod.rs	2025-04-12 18:24:02.000000000 +0800
+++ rnote-0.12.0.mod/crates/rnote-ui/src/appwindow/mod.rs	2025-04-12 21:35:23.811326082 +0800
@@ -646,7 +646,6 @@
 
         // Avoids already borrowed
         let pen_style = canvas.engine_ref().penholder.current_pen_style_w_override();
-        let pen_sounds = canvas.engine_ref().pen_sounds();
         let doc_format = canvas.engine_ref().document.format;
         let total_zoom = canvas.engine_ref().camera.total_zoom();
         let snap_positions = canvas.engine_ref().document.snap_positions;
@@ -674,11 +673,6 @@
         );
         adw::prelude::ActionGroupExt::change_action_state(
             self,
-            "pen-sounds",
-            &pen_sounds.to_variant(),
-        );
-        adw::prelude::ActionGroupExt::change_action_state(
-            self,
             "snap-positions",
             &snap_positions.to_variant(),
         );
